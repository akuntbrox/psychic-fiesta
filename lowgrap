-- Low Graphics Button Toggle (LocalScript)

-- Services
local Players   = game:GetService("Players")
local Lighting  = game:GetService("Lighting")
local RunService = game:GetService("RunService")

local player   = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")
local Terrain  = workspace:FindFirstChildOfClass("Terrain")

-- ===== Utility: snapshot and restore =====
local function snapshot(target, props)
	local snap = {}
	for _, p in ipairs(props) do
		if target and target[p] ~= nil then
			snap[p] = target[p]
		end
	end
	return snap
end

local function restore(target, snap)
	for p, v in pairs(snap) do
		if target and target[p] ~= nil then
			target[p] = v
		end
	end
end

-- Properties to store
local lightingProps = {"GlobalShadows","EnvironmentSpecularScale","EnvironmentDiffuseScale","Brightness"}
local terrainProps  = {"Decoration","WaterWaveSize","WaterWaveSpeed","WaterReflectance","WaterTransparency"}

-- Save originals
local original = {
	lighting = snapshot(Lighting, lightingProps),
	terrain = Terrain and snapshot(Terrain, terrainProps) or {},
	postFX = {},
}

-- Snapshot post effects
for _, obj in ipairs(Lighting:GetDescendants()) do
	if obj:IsA("PostEffect") then
		original.postFX[obj] = obj.Enabled
	end
end

-- Low graphics mode
local lowActive = false

local function applyLow()
	Lighting.GlobalShadows = false
	Lighting.EnvironmentSpecularScale = 0
	Lighting.EnvironmentDiffuseScale = 0
	Lighting.Brightness = math.clamp((Lighting.Brightness or 2) * 0.8, 0.5, 4)

	for fx in pairs(original.postFX) do
		if fx and fx.Parent then
			fx.Enabled = false
		end
	end

	if Terrain then
		Terrain.Decoration = false
		Terrain.WaterWaveSize = 0
		Terrain.WaterWaveSpeed = 0
		Terrain.WaterReflectance = 0
		Terrain.WaterTransparency = 0.7
	end

	lowActive = true
end

local function restoreAll()
	restore(Lighting, original.lighting)
	if Terrain then restore(Terrain, original.terrain) end

	for fx, wasEnabled in pairs(original.postFX) do
		if fx and fx.Parent then
			fx.Enabled = wasEnabled
		end
	end

	lowActive = false
end

local function toggle()
	if lowActive then
		restoreAll()
	else
		applyLow()
	end
	updateButton()
end

-- ===== GUI Button =====
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LowGraphicsUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local Button = Instance.new("TextButton")
Button.Size = UDim2.new(0, 140, 0, 50)
Button.Position = UDim2.new(1, -160, 1, -70) -- bottom-right
Button.BackgroundColor3 = Color3.fromRGB(40,40,40)
Button.TextColor3 = Color3.new(1,1,1)
Button.TextScaled = true
Button.Text = "Low Graphics: OFF"
Button.Parent = ScreenGui

function updateButton()
	if lowActive then
		Button.Text = "Low Graphics: ON"
		Button.BackgroundColor3 = Color3.fromRGB(20,100,20)
	else
		Button.Text = "Low Graphics: OFF"
		Button.BackgroundColor3 = Color3.fromRGB(100,20,20)
	end
end

Button.MouseButton1Click:Connect(toggle)

-- Initial state
updateButton()
